" -----------------------------
" Bootstrap vim-plug if missing
" -----------------------------
if has('win32')
    silent !iwr -useb https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim | ni $HOME/vimfiles/autoload/plug.vim -Force
else
    if empty(glob('~/.vim/autoload/plug.vim'))
        silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
                    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
        autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
    endif
endif

" -----------------------------
" Plugins
" -----------------------------
call plug#begin('~/.vim/plugged')
Plug 'FriesischScott/monokai-pro'
Plug 'itchyny/lightline.vim'                " Better status line

Plug 'ntpeters/vim-better-whitespace'       " Better white spaces
Plug 'scrooloose/nerdtree'
Plug 'airblade/vim-gitgutter'
Plug 'ryanoasis/vim-devicons'

Plug 'lervag/vimtex'                        " Latex for vim
Plug 'rhysd/vim-grammarous'                 " Grammar checker

Plug 'JuliaEditorSupport/julia-vim'         " Julia for vim
"Plug 'Xuyuanp/nerdtree-git-plugin'

call plug#end()

" -----------------------------
" General Settings
" -----------------------------
syntax enable                           " Enable syntax highlighting
filetype plugin indent on               " Enable filetype detection + indentation
set nocompatible                        " Better Vim experience
set hidden                              " Allow buffer switching without saving
set number
set relativenumber
set scrolloff=9999                      " Keep cursor away from screen edges
set backspace=indent,eol,start
set nobackup                            " Disable automatic backup file '~'

" Tabs & Indentation
set tabstop=4
set shiftwidth=4
set expandtab

" Search
set incsearch
set hlsearch

if has('clipboard')
    " Use the system clipboard by default
    set clipboard=unnamedplus
endif

" -----------------------------
" Theme Configuration
" -----------------------------
colorscheme monokai_pro_octagon                     " set the colorscheme
let g:lightline = {
            \ 'colorscheme': 'monokai_pro_octagon',
            \ }
if (has("termguicolors"))
    set termguicolors
endif


" -----------------------------
" Better-WhiteSpaces Configuration
" -----------------------------
let g:better_whitespace_enabled=1       " highlight withe spaces
let g:strip_whitespace_on_save=1        " auto remove withe spaces on saving
" Re-apply autocmd in case another plugin clears it
augroup BetterWhitespace
    autocmd!
    autocmd BufWritePre * StripWhitespace
augroup END

" -----------------------------
" Toggle NerdTree
" -----------------------------
map <C-o> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1

" -----------------------------
" Lightline status configuration
" -----------------------------
set laststatus=2

" -----------------------------
" VimTeX Configuration
" -----------------------------
" Enable grammarous only in LaTeX files
autocmd FileType tex,plaintex,latex setlocal spell spelllang=en_gb

augroup MySpell
    autocmd!
    " Clear and redefine only SpellBad after colorscheme loads
    autocmd ColorScheme * highlight clear SpellBad
    autocmd ColorScheme * highlight SpellBad cterm=underline gui=undercurl guisp=Red
augroup END

doautocmd ColorScheme


" Xreader as viewer (no synctex support)
let g:vimtex_view_method = 'general'
let g:vimtex_view_general_viewer = 'xreader'
let g:vimtex_view_general_options = '@pdf'

let g:vimtex_compiler_method = 'latexmk'                            " Use latexmk as compiler
let g:vimtex_compiler_latexmk = {
            \ 'build_dir' : '',
            \ 'callback' : 1,
            \ 'continuous' : 1,
            \ 'executable' : 'latexmk',
            \ 'options' : [
            \   '-pdf',
            \   '-shell-escape',
            \   '-verbose',
            \   '-file-line-error',
            \   '-synctex=1',
            \   '-interaction=nonstopmode',
            \   '-bibtex'
            \ ],
            \ }
